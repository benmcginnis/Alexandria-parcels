name: Deploy to Cloudflare

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      upload_data:
        description: 'Force upload data files to R2'
        required: false
        default: 'false'
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Worker and Pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build splitter
        run: npm run build

      - name: Build React app
        run: npm run build:vite

      - name: Build Worker
        run: npm run build:worker

      - name: Deploy Worker
        run: npx wrangler deploy --config wrangler.worker.toml
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Upload data to R2
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.upload_data == 'true' || github.event_name == 'push'
        run: |
          # Check if we should force upload (workflow_dispatch with upload_data=true)
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.upload_data }}" = "true" ]; then
            echo "Force uploading all data files (upload_data=true)..."
            FORCE_UPLOAD=true
          else
            echo "Using git diff logic for data upload..."
            FORCE_UPLOAD=false
          fi
          
          # Upload manifest if it exists
          if [ -f "data/manifest.json" ]; then
            if [ "$FORCE_UPLOAD" = "true" ] || git diff --quiet HEAD~1 HEAD -- data/manifest.json 2>/dev/null || [ "${{ github.event_name }}" = "push" ] && [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
              echo "Uploading manifest.json..."
              npx wrangler r2 object put alexandria-parcels-data/manifest.json --file data/manifest.json
            else
              echo "Skipping manifest.json (unchanged)"
            fi
          fi
          
          # Upload batch files
          for i in {1..50}; do
            batch_file="data/alexandria_parcels_batch_$(printf "%03d" $i).geojson.gz"
            if [ -f "$batch_file" ]; then
              if [ "$FORCE_UPLOAD" = "true" ] || git diff --quiet HEAD~1 HEAD -- "$batch_file" 2>/dev/null || [ "${{ github.event_name }}" = "push" ] && [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
                echo "Uploading $batch_file..."
                npx wrangler r2 object put "alexandria-parcels-data/alexandria_parcels_batch_$(printf "%03d" $i).geojson.gz" --file "$batch_file"
              else
                echo "Skipping $batch_file (unchanged)"
              fi
            else
              echo "Warning: $batch_file not found"
            fi
          done
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deploy Pages
        run: npx wrangler pages deploy dist/client --project-name alexandria-parcels --commit-dirty=true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
